---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: user-db-mongodata
  namespace: dev
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-db
  namespace: dev
  labels:
    name: user-db
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: user-db
  template:
    metadata:
      labels:
        name: user-db
    spec:
      containers:
      - image: mongo
        name: user-db
        ports:
        - containerPort: 27017
        resources: {}
        volumeMounts:
        - mountPath: /data/db
          name: user-db-mongodata
      restartPolicy: Always
      volumes:
      - name: user-db-mongodata
        persistentVolumeClaim:
          claimName: user-db-mongodata
---
apiVersion: v1
kind: Service
metadata:
  name: user-db
  namespace: dev
spec:
  ports:
  - name: "27017"
    port: 27017
    targetPort: 27017
  selector:
    name: user-db
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: user-db-mongodata
  namespace: staging
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-db
  namespace: staging
  labels:
    name: user-db
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: user-db
  template:
    metadata:
      labels:
        name: user-db
    spec:
      containers:
      - image: mongo
        name: user-db
        ports:
        - containerPort: 27017
        resources: {}
        volumeMounts:
        - mountPath: /data/db
          name: user-db-mongodata
      restartPolicy: Always
      volumes:
      - name: user-db-mongodata
        persistentVolumeClaim:
          claimName: user-db-mongodata
---
apiVersion: v1
kind: Service
metadata:
  name: user-db
  namespace: staging
spec:
  ports:
  - name: "27017"
    port: 27017
    targetPort: 27017
  selector:
    name: user-db
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: user-db-mongodata
  namespace: prod
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-db
  namespace: prod
  labels:
    name: user-db
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: user-db
  template:
    metadata:
      labels:
        name: user-db
    spec:
      containers:
      - image: mongo
        name: user-db
        ports:
        - containerPort: 27017
        resources: {}
        volumeMounts:
        - mountPath: /data/db
          name: user-db-mongodata
      restartPolicy: Always
      volumes:
      - name: user-db-mongodata
        persistentVolumeClaim:
          claimName: user-db-mongodata
---
apiVersion: v1
kind: Service
metadata:
  name: user-db
  namespace: prod
spec:
  ports:
  - name: "27017"
    port: 27017
    targetPort: 27017
  selector:
    name: user-db