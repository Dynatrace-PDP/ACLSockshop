stages:
    - build
    - imageBuildAndPush
    - deployDev

variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
maven-build:
    stage: build
    image: maven:3.3.9-jdk-8-alpine
    script:
        - mvn -B clean package
        - echo "VERSION=$(cat version)" > vers.env
    artifacts:
        paths:
            - "/builds/sockshop/carts/target/"
        reports:
            dotenv: vers.env

docker-buildnpush:
    dependencies:
        - maven-build
    stage: imageBuildAndPush
    image: docker:24.0.5
    services:
        - name: docker:24.0.5-dind
          variables:
            HEALTHCHECK_TCP_PORT: "2376"
    before_script:
        - docker info
    script:
        - docker build -t $CI_REGISTRY_IMAGE:$VERSION .
        - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
        - docker push $CI_REGISTRY_IMAGE:$VERSION
        - echo "AUTH_TOKEN=$(sed -nE '$!{:a;N;$!ba;s/\n//g;s/"auth":[^"]*"([^"]*)"/\n\1\nAUTH/g};/^[^\n]*\nAUTH/P;D' ~/.docker/config.json)" >> auth.env
    artifacts:
        reports:
            dotenv: auth.env

deploy-to-dev:
    needs:
        - docker-buildnpush
    stage: deployDev
    image: bitnami/kubectl:latest
    script:
        - if ["$firstRun" == "yes"]; then 
            firstRun=="nah"
          else
            kubectl delete secret regcred
          fi 
        - kubectl create secret docker-registry regcred --docker-server=$CI_REGISTRY --docker-username=$CI_REGISTRY_USER --docker-password=$AUTH_TOKEN
        - 'sed -i "s#image: .*#image: $CI_REGISTRY/carts:$VERSION#" manifest/carts.yml'
        - "kubectl -n dev apply -f manifest/carts.yml"