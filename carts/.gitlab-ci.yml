Primary navigation
Homepage

Project
C
carts

Pinned
Issues
0
Merge requests
0

Manage

Plan

Code

Build

Secure

Deploy

Operate

Monitor

Analyze

Settings
You can't push or pull repositories using SSH until you add an SSH key to your profile.
sockshop
carts
carts
.gitlab-ci.yml
.gitlab-ci.yml
ACL User's avatar
Update .gitlab-ci.yml file
ACL User authored 1 hour ago
2eb43c3c
.gitlab-ci.yml
2.42 KiB
stages:
    - build
    - imageBuildAndPush
    - deployDev
    - jmeter-test
variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
maven-build:
    stage: build
    image: maven:3.3.9-jdk-8-alpine
    script:
        - mvn -B clean package
        - echo "VERSION=$(cat version)" > vers.env
    artifacts:
        paths:
            - "/builds/sockshop/carts/target/"
        reports:
            dotenv: vers.env
docker-buildnpush:
    dependencies:
        - maven-build
    stage: imageBuildAndPush
    image: docker:24.0.5
    services:
        - name: docker:24.0.5-dind
          variables:
            HEALTHCHECK_TCP_PORT: "2376"
    before_script:
        - docker info
    script:
        - docker build -t $CI_REGISTRY_IMAGE:$VERSION .
        - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
        - docker push $CI_REGISTRY_IMAGE:$VERSION
        - echo "AUTH_TOKEN=$(sed -nE '$!{:a;N;$!ba;s/\n//g;s/"auth":[^"]*"([^"]*)"/\n\1\nAUTH/g};/^[^\n]*\nAUTH/P;D' ~/.docker/config.json)" >> auth.env
    artifacts:
        reports:
            dotenv: auth.env
deploy-to-dev:
    dependencies:
        - docker-buildnpush
        - maven-build
    stage: deployDev
    image: bitnami/kubectl:latest
    script:
        - kubectl create secret docker-registry regcred --docker-server=$CI_REGISTRY --docker-username=$CI_REGISTRY_USER --docker-password=$AUTH_TOKEN
        - echo "$CI_DEPLOY_USER, $CI_DEPLOY_PASSWORD"
        - kubectl create secret docker-registry regcred --docker-server=$CI_REGISTRY --docker-username=$CI_DEPLOY_USER --docker-password=$CI_DEPLOY_PASSWORD -n dev
        - 'sed -i "s#image: .*#image: $CI_REGISTRY_IMAGE:$VERSION #" manifest/carts.yml'
        - "kubectl -n dev apply -f manifest/carts.yml"
        - kubectl wait pod -l app=carts  -n dev --for=condition=Ready --timeout=180s
        - kubectl delete secret regcred
        - kubectl delete secret regcred -n dev
jmeter-test:
    dependencies:
        - maven-build
    needs:
        - deploy-to-dev
        - maven-build
    stage: jmeter-test
    image: dynatraceace/jmeter-runner:1.0.0-acl
    script:
        - jmeter -n -t jmeter/basiccheck.jmx -l HealthCheck_carts_dev_$VERSION -Jext_serverUrl=carts.dev -Jext_serverPort=80 -Jext_checkPath "/health" -Jext_vuCount=1 -Jext_loopCount=1 -Jext_LTN="HealthCheck_1" -Jext_funcValidation=true -Jext_avgRtValidation=0