stages:
    - build
    - imageBuildAndPush
    - deployDev

variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
maven-build:
    stage: build
    image: maven:3.3.9-jdk-8-alpine
    script:
        - mvn -B clean package
    artifacts:
        paths:
            - "/builds/sockshop/carts/target/"

docker-buildnpush:
    dependencies:
        - maven-build
    stage: imageBuildAndPush
    image: docker:24.0.5
    services:
        - name: docker:24.0.5-dind
          variables:
            HEALTHCHECK_TCP_PORT: "2376"
    before_script:
        - docker info
    script:
        - docker build -t $CI_REGISTRY_IMAGE .
        - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
        - docker push $CI_REGISTRY_IMAGE
        - echo "AUTH_TOKEN=$(cat ~/.docker/config.json | jq -r ‘.auths["https://index.docker.io/v1/"].auth‘)" >> auth.env
    artifacts:
        reports:
            dotenv: auth.env

deploy-to-dev:
    needs:
        - docker-buildnpush
    stage: deployDev
    image: bitnami/kubectl:latest
    script:
        - kubectl create secret docker-registry regcred --docker-server=index.docker.io/v1/ --docker-username=myuser --docker-password=$AUTH_TOKEN
        - 'sed -i "s#image: .*#image: $CI_REGISTRY_IMAGE#" manifest/carts.yml'
        - "kubectl -n dev apply -f manifest/carts.yml"