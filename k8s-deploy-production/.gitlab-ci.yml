stages:
  - dockerlogin
  - deployProd
  - dt-event
  - regcred-clean
  - deploy-clean

variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"

dockerlogin:
    dependencies:
    stage: dockerlogin
    image: docker:24.0.5
    services:
        - name: docker:24.0.5-dind
          variables:
            HEALTHCHECK_TCP_PORT: "2376"
    before_script:
        - docker info
    script:
        - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
        - echo "AUTH_TOKEN=$(sed -nE '$!{:a;N;$!ba;s/\n//g;s/"auth":[^"]*"([^"]*)"/\n\1\nAUTH/g};/^[^\n]*\nAUTH/P;D' ~/.docker/config.json)" >> auth.env
        - echo "$CI_PIPELINE_IID"
    artifacts:
        reports:
            dotenv: auth.env

deploy-to-prod:
    dependencies:
        - dockerlogin
    stage: deployProd
    image: alpine/kubectl:latest
    script:
        - kubectl create secret docker-registry prodregcred --docker-server=$CI_REGISTRY --docker-username=$CI_REGISTRY_USER --docker-password=$AUTH_TOKEN
        - echo "$CI_DEPLOY_USER, $CI_DEPLOY_PASSWORD"
        - kubectl create secret docker-registry proddeploycred --docker-server=$CI_REGISTRY --docker-username=$CI_DEPLOY_USER --docker-password=$CI_DEPLOY_PASSWORD -n prod
        -  "sed -i \"s#image: .*#image: `kubectl -n staging get deployment -o jsonpath='{.items[*].spec.template.spec.containers[0].image}' --field-selector=metadata.name=carts`#\" carts.yml"
        -  "sed -i \"s#image: .*#image: `kubectl -n staging get deployment -o jsonpath='{.items[*].spec.template.spec.containers[0].image}' --field-selector=metadata.name=catalogue`#\" catalogue.yml"
        -  "sed -i \"s#image: .*#image: `kubectl -n staging get deployment -o jsonpath='{.items[*].spec.template.spec.containers[0].image}' --field-selector=metadata.name=front-end`#\" front-end.yml"
        -  "sed -i \"s#image: .*#image: `kubectl -n staging get deployment -o jsonpath='{.items[*].spec.template.spec.containers[0].image}' --field-selector=metadata.name=orders`#\" orders.yml"
        -  "sed -i \"s#image: .*#image: `kubectl -n staging get deployment -o jsonpath='{.items[*].spec.template.spec.containers[0].image}' --field-selector=metadata.name=payment`#\" payment.yml"
        -  "sed -i \"s#image: .*#image: `kubectl -n staging get deployment -o jsonpath='{.items[*].spec.template.spec.containers[0].image}' --field-selector=metadata.name=queue-master`#\" queue-master.yml"
        -  "sed -i \"s#image: .*#image: `kubectl -n staging get deployment -o jsonpath='{.items[*].spec.template.spec.containers[0].image}' --field-selector=metadata.name=shipping`#\" shipping.yml"
        -  "sed -i \"s#image: .*#image: `kubectl -n staging get deployment -o jsonpath='{.items[*].spec.template.spec.containers[0].image}' --field-selector=metadata.name=user`#\" user.yml"
        -  kubectl -n prod apply -f carts.yml,catalogue.yml,front-end.yml,orders.yml,payment.yml,queue-master.yml,shipping.yml,user.yml
        - kubectl delete secret prodregcred
        - kubectl delete secret proddeploycred -n prod

dt-event-push:
    stage: dt-event
    dependencies:
        - "deploy-to-prod"
    image: alpine/curl:8.14.1
    script:        
        - |
          curl -X "POST" "https://$DT_TENANT_UUID.live.dynatrace.com/api/v2/events/ingest" --header "accept: application/json; charset=utf-8" --header "Authorization: Api-Token $DT_ACCESS_TOKEN" --header "Content-Type: application/json; charset=utf-8" --data '{ "entitySelector": "type(SERVICE)", "eventType": "CUSTOM_INFO", "properties": { "Gitlab Build Number": "$CI_PIPELINE_IID", "Git commit": "$CI_COMMIT_MESSAGE" }, "title": "Deployment Event" }'

regcred-cleaner:
    rules:
        - when: on_failure
    stage: regcred-clean
    image: alpine/kubectl:latest
    script:
        - kubectl delete secret prodregcred
    allow_failure: true

deploy-cleaner:
    rules:
        - when: on_failure
    stage: deploy-clean
    image: alpine/kubectl:latest
    script:
        - kubectl delete secret proddeploycred -n prod